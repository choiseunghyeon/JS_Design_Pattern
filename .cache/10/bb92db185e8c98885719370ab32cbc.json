{"id":"js/command/abstract_command.js","dependencies":[{"name":"C:\\Users\\ket87\\OneDrive\\바탕 화면\\JS_Design_Pattern\\package.json","includedInParent":true,"mtime":1636640182226}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar AbstractCommand = /*#__PURE__*/function () {\n  function AbstractCommand(receiver) {\n    _classCallCheck(this, AbstractCommand);\n\n    this.receiver = receiver;\n  }\n\n  _createClass(AbstractCommand, [{\n    key: \"execute\",\n    value: function execute() {\n      throw new Error(\"implmenet this method\");\n    }\n  }]);\n\n  return AbstractCommand;\n}();\n\nexports.default = AbstractCommand;"},"sourceMaps":{"js":{"mappings":[{"name":"AbstractCommand","generated":{"line":14,"column":4},"source":"js/command/abstract_command.js","original":{"line":1,"column":21}},{"generated":{"line":15,"column":0},"source":"js/command/abstract_command.js","original":{"line":2,"column":2}},{"name":"receiver","generated":{"line":15,"column":27},"source":"js/command/abstract_command.js","original":{"line":2,"column":14}},{"generated":{"line":15,"column":35},"source":"js/command/abstract_command.js","original":{"line":2,"column":2}},{"generated":{"line":15,"column":37},"source":"js/command/abstract_command.js","original":{"line":2,"column":24}},{"generated":{"line":16,"column":0},"source":"js/command/abstract_command.js","original":{"line":2,"column":24}},{"generated":{"line":18,"column":0},"source":"js/command/abstract_command.js","original":{"line":3,"column":4}},{"name":"receiver","generated":{"line":18,"column":9},"source":"js/command/abstract_command.js","original":{"line":3,"column":9}},{"generated":{"line":18,"column":17},"source":"js/command/abstract_command.js","original":{"line":3,"column":4}},{"name":"receiver","generated":{"line":18,"column":20},"source":"js/command/abstract_command.js","original":{"line":3,"column":20}},{"generated":{"line":18,"column":28},"source":"js/command/abstract_command.js","original":{"line":3,"column":4}},{"generated":{"line":19,"column":0},"source":"js/command/abstract_command.js","original":{"line":4,"column":3}},{"generated":{"line":23,"column":11},"source":"js/command/abstract_command.js","original":{"line":6,"column":2}},{"generated":{"line":23,"column":30},"source":"js/command/abstract_command.js","original":{"line":6,"column":12}},{"generated":{"line":24,"column":0},"source":"js/command/abstract_command.js","original":{"line":7,"column":4}},{"generated":{"line":24,"column":12},"source":"js/command/abstract_command.js","original":{"line":7,"column":10}},{"name":"Error","generated":{"line":24,"column":16},"source":"js/command/abstract_command.js","original":{"line":7,"column":14}},{"generated":{"line":24,"column":21},"source":"js/command/abstract_command.js","original":{"line":7,"column":10}},{"generated":{"line":24,"column":22},"source":"js/command/abstract_command.js","original":{"line":7,"column":20}},{"generated":{"line":24,"column":45},"source":"js/command/abstract_command.js","original":{"line":7,"column":10}},{"generated":{"line":24,"column":46},"source":"js/command/abstract_command.js","original":{"line":7,"column":4}},{"generated":{"line":25,"column":0},"source":"js/command/abstract_command.js","original":{"line":8,"column":3}}],"sources":{"js/command/abstract_command.js":"export default class AbstractCommand {\r\n  constructor(receiver) {\r\n    this.receiver = receiver;\r\n  }\r\n\r\n  execute() {\r\n    throw new Error(\"implmenet this method\");\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"e7e7864c460e7bc48606cfdfa0e16b09","cacheData":{"env":{}}}