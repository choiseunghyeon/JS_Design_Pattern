{"version":3,"sources":["js/chain/abstract_handler.js","js/chain/operand_handler.js","js/operand/abstract_operand.js","js/operand/number_operand.js","js/chain/request.js","js/chain/abstract_operation_handler.js","js/chain/add_operation_handler.js","js/chain/substract_operation_handler.js","js/chain/multiply_operation_handler.js","js/chain/divide_operation_handler.js","js/chain/client.js"],"names":["AbstractHandler","operand","next","request","hasOperand","result","operate","setResult","handleRequest","desc","getEquation","appendEquation","getValue","getDesc","Error","OperandHandler","value","getOperandValue","getOperandDesc","AbstractOperand","NumberOperand","input","inputs","push","inputText","getInputText","length","parseFloat","size","splice","reduce","String","Request","sbEquation","AbstractOperationHandler","getOperator","firstNumber","secondNumber","AddOperationHandler","getResult","SubstractOperationHandler","MultiplyOperationHandler","DivideOperationHandler","Client","test1","test2","test3","test4","test5","test6","handlerList","operandHandler","tempTest","addOperationHandler","substractOperationHandler","multiplyOperationHandler","divideOperationHandler","handler","nextHandler","index","setNext","makeEquation","console","log"],"mappings":";;;;;;;AKAA,ACAA,AIAA,ADAA,ADAA,APAA,AMAA,AJAA;;AOCA;;AACA;;AACA,IVHqBA,AIAAgC,AFAAb;AFCnB,AIAA,AFAA,qBEAc,MJAFlB,AEAAA,OFAZ,AEAA,EFAqB,AEAA;AFAA,AUGvB,ANHgB,AFAO;AAAE;AFCrB,AUGJ,ANHI,SJAKA,AIAAI,MAAL,CJAA,EIAc,CJACJ,GIAf,IJAA;AACA,AICA,SJDKC,AICA+B,IJDL,GAAY,GICZ,CJDA,EICkB,EAAlB;AJAD,AUEH,ANDG;WFFD,oBAAW;AACT,YAAM,IAAInB,KAAJ,CAAU,uBAAV,CAAN;AACD;WFCD,AICA,iBJDQZ,IAAR,AICY,EJDE;AACZ,AICA,WJDKA,EICE,EJDP,GAAYA,AICAG,IJDZ,EICA;AJAA,AICD,WFHD,EFES,KAAKH,IAAZ,QEFQ;AFGT,AEFC,YAAM,IAAIY,KAAJ,CAAU,uBAAV,CAAN;AACD;WEGD,mBAAUT,MAAV,EAAkB;AAChB,IMJiBsC,OVGnB,AICOtC,MAAL,GAAcA,MAAd,QJDYF,OAAd,EAAuB;AACrB,AICD,UJDK,CEFN,IFEWC,UAAL,EAAJ,EAAuB,EEFd;AFGP,AEFF,YFEMC,CEFC,KFEK,AEFZ,GFEe,KAAKC,OAAL,CAAaH,OAAb,CAAb;AACAA,AEFH,QFEGA,OAAO,CAACI,SAAR,CAAkBF,MAAlB;IKZe6B,ACAAI,AGAAI,ADAAD,APAA1B,AMAAyB,AJAApB,OCanB,wBAAeX,IAAf,EAAqB;AJCjB,AIAF,WAAKwB,CJAC,KAAK/B,IAAL,AIAN,IAAmBO,CJAC,GIApB,CJAE,EAAwB;AACtB,AIAL,eJAUP,IAAL,CAAUM,aAAV,CAAwBL,OAAxB;AACD,WUTL,gBAAO;AVUJ,AUTD,WAAKyC,KAAL;AVUD,AKjBD,ACAA,AIQE,ADRF,ADAA,APAA,AMAA,AJAA,WOQOC,ANQP,KMRE,SPRUxB,CFAApB,IEAZ,CGAYA,CHAO,CFAnB,CQAYA,ALgBE,CHhBO,CIATA,AGAAA,CDAAA,CDAZ,EAAqB,CGArB,EJAA,AIAqB,ADArB,CDAA,CFAqB,AGAA,CDAA;AFAA,ACAA,AISnB,ADTmB,ADAA,APAA,AGiBnB,AGjBmB,AJAF,WOSZ6C,ENQE,GMRP,ENQYb,UAAZ;AMPA,ANQD,WMRMc,KAAL;ALVmB,ACAA,AIWnB,ADXmB,ADAA,APAA,AMAA,AJAF,WHmBnB,AUROC,KAAL,aLVM/C,ACAAA,AGAAA,ADAAA,APAAA,AMAAA,IPkBKE,GKnBQ,ACAA,AGAA,ADAA,APAA,AMAA,IPmBrB,EAAsB;AACpB,AKlBD,ACAA,AIUC,ADVD,ADAA,APAA,AMAA,UPkBKM,CURCwC,GVQG,EURR,CVQW,KAAKvC,WAAL,CAAiBP,OAAjB,CAAX;AACAA,AURD,APZC,MHoBAA,OAAO,CAACQ,cAAR,CAAuBF,IAAvB;AGlBA,UAAKa,MAAL,GAAc,EAAd;AHoBA,UAAI,KAAKpB,IAAL,KAAc,IAAlB,EAAwB;AACtB,AGnBF,QAAImB,GEDN,ACAA,AIWA,ADXA,ADAA,APAA,AMAA,EPoBSnB,AGnBE,IHmBP,CAAUS,AGnBE,IAAd,EAAoB,IGDdR,AIWA,ADXAA,ADAAA,APAAA,AMAAA,IPoBJ,CAAyBA,CKpBf,CCAd,AGAA,ADAA,APAA,AMAA,EDAiB,AGAA,ADAA,APAA,AMAA,GPoBb;AACD,AKpBD,ACAA,AIWA,ADXA,ADAA,APAA,AMAA,AJCE,UGDEiC,AIWAc,ADXAd,ADAAA,APAApB,AMAAoB,EFAE,AFCCd,GFDE,CIACR,EJAE,AECV,CAAYS,EEDR,ACAS,AIWA,ADXA,ADAA,ADAA,CFAC,CJACN,AECf,CGDgBd,AIWA,ADXAA,ADAAA,ADAAA,AJCCkB,EOUnB,GPVE,EGDuB,AGAA,ADAA,ADAA,CDACkB,AGAAA,ADAAA,ADAAA,MNAd,EAAZ,CKAkB,AGAA,ADAA,ADAA,EDAlB,AGAA,ADAA,ADAA,EFAM,CAAN;ALqBD,AKpBA,ACAC,AIYA,ADZA,ADAA,APAA,AMAA,AJCC,UGDGF,AIYAc,ADZAd,ADAAA,ADAAA,GNAGrB,KAAP,IKAgB,AGAA,ADAA,ADAA,EGYE,CJZC,AGAA,ADAA,ADAA,EGYE,GJZGC,AGAAA,ADAAA,ADAAA,CGYCF,cJZN,AGAA,ADAA,ADAA,EDAnB,AGAA,ADAA,ADAA,QGYqB,CAAmB,IAAIK,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AJVA,AIYA8B,ADZA,ADAA,APDD,AMCC,MGYAA,OJZOd,AGAAA,ADAAA,ADAAA,IGYI,CAACb,IAAZ,CAAiB4B,CJZC,AGAA,ADAA,ADAA,GDAGd,AGAAA,ADAAA,ADAAA,UGYrB,EJZA,AGAA,ADAA,ADAA;ADCD,AIaC,ADbD,ADAA,ADAA,AJTkB,WOsBZe,QAAL,CAAcF,WAAd;AACD,APfA,WHoBD,AKpBA,qBAAY/C,MLoBM,CKpBlB,EAAqB;ALqBnB,AKpBA,WJAF,EDoBS,KAAKF,MKpBD,CLoBJ,CAAaW,GKpBJuB,GJANhC,EDoBH,EAAP,GCpBF,CIAa,CJAQ,CIAnB,cAAiC,KAAKe,cAAL,EAAjC;ALqBD,AKpBA,AJAC,WKCF,AGAA,ADAA,ADAA,ENDS,KAAKA,cAAL,EKCK,AGAA,ADAA,APDZ,AMCY;ADCZ,AGAA,ADAA,APDD,AMCC,WGaF,EJbS,AGAA,ADAA,ADAA,GDAP,AGAA,ADAA,ADAA,YGaM;AJZP,AIaC,ADbD,ADAA,ADAA,UGaKgC,CPhBN,UOgBiB,GAAG,EAAlB,KPhBS;AOkBT,APjBA,UOiBIC,APjBA3B,CHqBN,AKpBA,QFDe,GAAG,EOiBE,GAAG,APjBAC,IOiBIV,GLhBb,GLoBG,EGrBC,EAAhB,cOiBqB,CAAmB,IAAIK,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AVKA,AKpBA,AKgBA,UAAIiC,GVIG,AKpBA,IAAP,CLoBYjD,UAAL,CUJgB,GAAG,CVIC,GUJGkC,EVIErC,OAAL,CAAaY,OAAb,EAApB,GAA6C,EAApD,MUJ0B,CAAwB,IAAIO,uBAAJ,CAAkB,IAAlB,CAAxB,CAA1B;AVKD,AKpBA,AKiBC8B,APlBA,EFdwClD,ISgCxCkD,IPlBI1B,CGEN,AGAA,ADAA,ADAA,MGgBa,CAACD,CPlBC,CAACG,EOkBd,CAAiByB,GPlBb,GAAmB,CAAvB,EAA0B,EGEdf,AGAAA,ADAAA,ADAAA,GGgBZ,QJhBF,AGAA,ADAA,ADAA,EDA2BC,AGAAA,ADAAA,ADAAA,YDA3B,AGAA,ADAA,ADAA,EDAyC,AGAA,ADAA,ADAA;ADCvC,AIgBAa,ADhBA,ADAA,ADAA,AJFE,MOkBFA,OJhBOd,AGAAA,ADAAA,ADAAA,EJFET,EOkBE,CAACJ,IAAZ,CAAiB8B,CJhBC,AGAA,ADAA,ADAA,CJFC,CAAC7B,CGECa,AGAAA,ADAAA,ADAAA,QJFF,CAAjB,GGEF,AGAA,ADAA,ADAA,GGgBA;AJfD,AIiBC,ADjBD,ADAA,ADAA,AJFE,WOmBIe,QAAL,CAAcF,WAAd;AACD,WVCD,AKpBA,iBLoBQ/C,MKpBMiC,CLoBd,EAAiB,QKpBjB,EAA2BC,YAA3B,EAAyC;ALqBvC,AKpBA,AFAA,YHoBM,AKpBA,CFAC,CAAP,EHoBUvB,AKpBAA,KLoBJ,AKpBA,CLoBU,AKpBA,uBLoBV,AKpBA,CLoBN,AKpBA;ALqBD,AKpBA,AFAA;EGnB8CoB,AGAGA,ADAEA,ADACA,SGsCrD,iBAAQ;AACN,UAAIgB,WAAW,GAAG,EAAlB;AAEA,UAAIC,CVAN,AGpBA,aOoBoB,GAAG,GPpBb,COoBiBpC,CVAfZ,OAAZ,EAAqB,cUAE,CAAmB,IAAIiB,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AVCA,AUAA,APpBA,EEtBkDpB,QK0C9CsD,EVAE,CGpBC,GHoBGxC,EGpBEW,GHoBN,CAAU,QGpBT,EAAP,GOoB6B,GAAG,IAAIe,GVA9B,CAAN,gCUAgC,CAA8B,IAAIpB,uBAAJ,CAAkB,GAAlB,CAA9B,CAAhC;AVCD,AUCC8B,APrBD,MOqBCA,WAAW,CAAC3B,IAAZ,CAAiB4B,cAAjB;AACAD,MAAAA,WAAW,CAAC3B,IAAZ,CAAiB+B,yBAAjB;AAEA,WAAKF,QAAL,CAAcF,WAAd;AACD,WVHD,AGpBA,gBAAO7B,KAAP,CHoBa,CGpBC;AHqBZ,AGpBA,UHoBI,CGpBCC,IHoBIrB,EGpBT,CAAYsB,IHoBR,AGpBJ,CAAiBF,IHoBI,CGpBrB,GHoBA,EAA2B;AACzB,AGpBH,eHoBU,IAAP;AACD,WUEH,iBAAQ;AACN,UAAI6B,WAAW,GAAG,EAAlB;AVDA,AUGA,UAAIC,CPxBN,EHqBS,KAAP,MUGkB,GAAG,IAAIpC,CPxBf,uBOwBW,CAAmB,IAAIK,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AVFD,AUGC,APxBA,UOwBImC,APxBE3B,IAAI,GAAG,KAAKN,MAAL,CAAYI,KOwBG,CPxB5B,EOwB+B,IAAIe,mCAAJ,CAA6B,IAAIrB,uBAAJ,CAAkB,GAAlB,CAA7B,CAA/B;AAEA8B,MAAAA,WAAW,CAAC3B,IAAZ,CAAiB4B,cAAjB;AACAD,AP1BA,MO0BAA,IP1BItB,IAAI,GO0BG,AP1BA,CO0BCL,AP1BZ,EAAc,EO0Bd,CAAiBgC,wBAAjB;AAEA,AP3BE,WHqBJ,AUMOH,EP3BE9B,MO2BP,AP3BE,CO2BY4B,AP3BArB,MAAZ,CAAmBD,IO2BrB,AP3ByB,GHqBb,AGrBgB,CAA1B,EAA6B,CAA7B;AHsBF,AUMD,AP3BE,aHqBM,KAAP;AACD,AGrBA;;WO4BD,iBAAQ;AACN,UAAIsB,CVNN,AGrBA,UO2BiB,GAAG,EAAlB,OVNW,AGrBA;AHsBX,AUOA,AP5BA,UO4BIC,CP5BC7B,EHqBE,IGrBP,CHqBYrB,EGrBE,EAAd,EO4BkB,CVPlB,EUOqB,IAAIc,wBAAJ,CAAmB,IAAIK,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AVND,AUOC,AP5BD,UO4BKoC,sBAAsB,GAAG,IAAId,iCAAJ,CAA2B,IAAItB,uBAAJ,CAAkB,GAAlB,CAA3B,CAA7B;AAEA8B,MAAAA,WAAW,CAAC3B,IAAZ,CAAiB4B,cAAjB;AACAD,MAAAA,WAAW,CAAC3B,IAAZ,CAAiBiC,sBAAjB;AAEA,WVVF,AUUOJ,AP/BP,QO+BE,CAAcF,WVVLjD,AUUT,IP/Ba,GHqBf,EAAoB;AAClB,AUUD,AP/BC,WHqBKA,EGrBE,KHqBP,AGrBYqB,GHqBGrB,GGrBR,CAAY6B,GHqBnB,GGrBO,CAAmB,UAACzB,MAAD,EAASgB,KAAT;AHsB3B,AGtB2B,eAAmBhB,MAAM,GAAG0B,MAAM,CAACV,KAAD,CAAlC;AAAA,OAAnB,EAA8D,EAA9D,CAAP;AACD,WO+BD,iBAAQ;AACN,UAAI6B,WAAW,GAAG,EAAlB;AAEA,UAAIC,cAAc,GAAG,IAAIpC,wBAAJ,CAAmB,IAAIK,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AACA,UAAIkC,CPjCN,oBAAW,IOiCoB,GAAG,IAAId,oCAAJ,CAA8B,IAAIpB,uBAAJ,CAAkB,GAAlB,CAA9B,CAAhC;AACA,APjCA,UOiCImC,GPjCG,IAAP,iBOiC4B,GAAG,IAAId,mCAAJ,CAA6B,IAAIrB,uBAAJ,CAAkB,GAAlB,CAA7B,CAA/B;AACA,APjCD,UOiCKoC,sBAAsB,GAAG,IAAId,iCAAJ,CAA2B,IAAItB,uBAAJ,CAAkB,GAAlB,CAA3B,CAA7B;AAEA8B,MAAAA,WAAW,CAAC3B,IAAZ,CAAiB4B,cAAjB;AACAD,MAAAA,WAAW,CAAC3B,IAAZ,CAAiB+B,yBAAjB;AACAJ,MAAAA,WAAW,CAAC3B,IAAZ,CAAiBgC,wBAAjB;AACAL,EPpFuC/B,IOoFvC+B,WAAW,CAAC3B,IAAZ,CAAiBiC,sBAAjB;AAEA,WAAKJ,QAAL,CAAcF,WAAd;AACD;;;WAED,kBAASA,WAAT,EAAsB;AACpB,UAAIO,OAAO,GAAG,IAAd;AACA,UAAIC,WAAW,GAAG,IAAlB;;AAEA,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGT,WAAW,CAACxB,MAAxC,EAAgDiC,KAAK,EAArD,EAAyD;AACvDF,QAAAA,OAAO,GAAGP,WAAW,CAACS,KAAD,CAArB;AACAD,QAAAA,WAAW,GAAGR,WAAW,CAACS,KAAK,GAAG,CAAT,CAAzB;AAEAF,QAAAA,OAAO,CAACG,OAAR,CAAgBF,WAAhB;AACD;;AAED,UAAIvD,OAAO,GAAG,IAAI6B,gBAAJ,EAAd;AACAmB,MAAAA,cAAc,CAACU,YAAf,CAA4B1D,OAA5B;AAEA2D,MAAAA,OAAO,CAACC,GAAR,mCAAuC5D,OAAO,CAACO,WAAR,EAAvC;AAEAP,MAAAA,OAAO,GAAG,IAAI6B,gBAAJ,EAAV;AACAmB,MAAAA,cAAc,CAAC3C,aAAf,CAA6BL,OAA7B;AAEA2D,MAAAA,OAAO,CAACC,GAAR,iCAAqC5D,OAAO,CAACoC,SAAR,EAArC;AACD","file":"client.acef8101.js","sourceRoot":"..\\10장 계산기 프로젝트","sourcesContent":["export default class AbstractHandler {\r\n  constructor(operand) {\r\n    this.operand = operand;\r\n    this.next = null;\r\n  }\r\n\r\n  setNext(next) {\r\n    this.next = next;\r\n    return this.next;\r\n  }\r\n\r\n  handleRequest(request) {\r\n    if (this.hasOperand()) {\r\n      let result = this.operate(request);\r\n      request.setResult(result);\r\n\r\n      if (this.next !== null) {\r\n        this.next.handleRequest(request);\r\n      }\r\n    }\r\n  }\r\n\r\n  makeEquation(request) {\r\n    let desc = this.getEquation(request);\r\n    request.appendEquation(desc);\r\n\r\n    if (this.next !== null) {\r\n      this.next.appendEquation(request);\r\n    }\r\n  }\r\n\r\n  getOperandValue() {\r\n    return this.operand.getValue();\r\n  }\r\n\r\n  getOperandDesc() {\r\n    return this.hasOperand() ? this.operand.getDesc() : \"\";\r\n  }\r\n\r\n  operate(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  hasOperand() {\r\n    if (this.operand !== null) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isOperation() {\r\n    return false;\r\n  }\r\n\r\n  getOperand() {\r\n    return this.operand;\r\n  }\r\n\r\n  setOperand(operand) {\r\n    this.operand = operand;\r\n  }\r\n}\r\n","import AbstractHandler from \"./abstract_handler\";\r\n\r\nexport default class OperandHandler extends AbstractHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let value = this.getOperandValue();\r\n    return value;\r\n  }\r\n\r\n  getEquation(request) {\r\n    return this.getOperandDesc();\r\n  }\r\n}\r\n","export default class AbstractOperand {\r\n  constructor(operand) {}\r\n\r\n  getValue() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n  getDesc() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  isNumber() {\r\n    return false;\r\n  }\r\n}\r\n","import AbstractOperand from \"./abstract_operand\";\r\n\r\nexport default class NumberOperand extends AbstractOperand {\r\n  constructor(input) {\r\n    super();\r\n\r\n    this.inputs = [];\r\n\r\n    if (input !== null) {\r\n      this.inputs.push(input);\r\n    }\r\n  }\r\n\r\n  getValue() {\r\n    let inputText = this.getInputText();\r\n\r\n    if (inputText.length > 0) {\r\n      return parseFloat(inputText);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getDesc() {\r\n    return this.getInputText();\r\n  }\r\n\r\n  append(input) {\r\n    this.inputs.push(input);\r\n  }\r\n\r\n  clearBack() {\r\n    const size = this.inputs.length;\r\n    if (size > 0) {\r\n      this.inputs.splice(size - 1, 1);\r\n    }\r\n  }\r\n\r\n  clearInput() {\r\n    this.inputs = [];\r\n  }\r\n\r\n  getInputText() {\r\n    return this.inputs.reduce((result, input) => result + String(input), \"\");\r\n  }\r\n\r\n  isNumber() {\r\n    return true;\r\n  }\r\n}\r\n","export default class Request {\r\n  constructor() {\r\n    this.result = null;\r\n\r\n    this.sbEquation = \"\";\r\n  }\r\n\r\n  getResult() {\r\n    return this.result;\r\n  }\r\n\r\n  setResult(result) {\r\n    this.result = result;\r\n  }\r\n\r\n  appendEquation(desc) {\r\n    this.sbEquation += desc;\r\n  }\r\n\r\n  getEquation() {\r\n    return this.sbEquation;\r\n  }\r\n}\r\n","import AbstractHandler from \"./abstract_handler\";\r\n\r\nexport default class AbstractOperationHandler extends AbstractHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  getOperator() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    return ` ${this.getOperator()} ${this.getOperandDesc()}`;\r\n  }\r\n\r\n  isOperation() {\r\n    return true;\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class AddOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber + secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"+\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber + secondNumber;\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class SubstractOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber - secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"-\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber - secondNumber;\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class MultiplyOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber * secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"*\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber * secondNumber;\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class DivideOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber / secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"/\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber / secondNumber;\r\n  }\r\n}\r\n","import OperandHandler from \"./operand_handler\";\r\nimport NumberOperand from \"../operand/number_operand\";\r\nimport Request from \"./request\";\r\nimport AddOperationHandler from \"./add_operation_handler\";\r\nimport SubstractOperationHandler from \"./substract_operation_handler\";\r\nimport MultiplyOperationHandler from \"./multiply_operation_handler\";\r\nimport DivideOperationHandler from \"./divide_operation_handler\";\r\n\r\nexport default class Client {\r\n  main() {\r\n    this.test1();\r\n    this.test2();\r\n    this.test3();\r\n    this.test4();\r\n    this.test5();\r\n    this.test6();\r\n  }\r\n\r\n  test1() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n\r\n    handlerList.push(operandHandler);\r\n\r\n    this.tempTest(handlerList);\r\n  }\r\n\r\n  test2() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let addOperationHandler = new AddOperationHandler(new NumberOperand(\"10\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(addOperationHandler);\r\n\r\n    this.tempTest(handlerList);\r\n  }\r\n\r\n  test3() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let substractOperationHandler = new SubstractOperationHandler(new NumberOperand(\"2\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(substractOperationHandler);\r\n\r\n    this.tempTest(handlerList);\r\n  }\r\n\r\n  test4() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let multiplyOperationHandler = new MultiplyOperationHandler(new NumberOperand(\"5\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(multiplyOperationHandler);\r\n\r\n    this.tempTest(handlerList);\r\n  }\r\n\r\n  test5() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let divideOperationHandler = new DivideOperationHandler(new NumberOperand(\"3\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(divideOperationHandler);\r\n\r\n    this.tempTest(handlerList);\r\n  }\r\n  test6() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let substractOperationHandler = new SubstractOperationHandler(new NumberOperand(\"2\"));\r\n    let multiplyOperationHandler = new MultiplyOperationHandler(new NumberOperand(\"5\"));\r\n    let divideOperationHandler = new DivideOperationHandler(new NumberOperand(\"3\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(substractOperationHandler);\r\n    handlerList.push(multiplyOperationHandler);\r\n    handlerList.push(divideOperationHandler);\r\n\r\n    this.tempTest(handlerList);\r\n  }\r\n\r\n  tempTest(handlerList) {\r\n    let handler = null;\r\n    let nextHandler = null;\r\n\r\n    for (let index = 0; index < handlerList.length; index++) {\r\n      handler = handlerList[index];\r\n      nextHandler = handlerList[index + 1];\r\n\r\n      handler.setNext(nextHandler);\r\n    }\r\n\r\n    let request = new Request();\r\n    operandHandler.makeEquation(request);\r\n\r\n    console.log(`request.getEquation() = ${request.getEquation()}`);\r\n\r\n    request = new Request();\r\n    operandHandler.handleRequest(request);\r\n\r\n    console.log(`request.getResult() = ${request.getResult()}`);\r\n  }\r\n}\r\n"]}