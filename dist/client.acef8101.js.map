{"version":3,"sources":["js/chain/abstract_handler.js","js/chain/operand_handler.js","js/operand/abstract_operand.js","js/operand/number_operand.js","js/chain/request.js","js/chain/abstract_operation_handler.js","js/chain/add_operation_handler.js","js/chain/substract_operation_handler.js","js/chain/multiply_operation_handler.js","js/chain/divide_operation_handler.js","js/operand/func/abstract_function.operand.js","js/operand/func/frac_function_operand.js","js/operand/func/percent_function_operand.js","js/operand/func/pow_function_operand.js","js/operand/func/sqrt_function_operand.js","js/chain/client.js"],"names":["AbstractHandler","operand","next","request","hasOperand","result","operate","setResult","handleRequest","desc","getEquation","appendEquation","makeEquation","getValue","getDesc","Error","OperandHandler","value","getOperandValue","getOperandDesc","AbstractOperand","NumberOperand","input","inputs","push","inputText","getInputText","length","parseFloat","size","splice","reduce","String","Request","sbEquation","AbstractOperationHandler","getOperator","firstNumber","secondNumber","AddOperationHandler","getResult","SubstractOperationHandler","MultiplyOperationHandler","DivideOperationHandler","AbstractFunctionOperand","FracFunctionOperand","PercentFunctionOperand","percent","PowFunctionOperand","Math","pow","SqrtFunctionOperand","sqrt","Client","test1","test2","test3","test4","test5","test6","testFunction1","testFunction2","testFunction3","testFunction4","testFunction5","testFunction6","handlerList","operandHandler","tempTest","addOperationHandler","substractOperationHandler","multiplyOperationHandler","divideOperationHandler","percentFunctionOperand","setPercent","handler","nextHandler","index","setNext","console","log"],"mappings":";;;;;;;AKAA,ACAA,ASAA,ANAA,ADAA,APAA,AMAA,AGAA,ACAA,ACAA,ACAA,ACAA,AXAA;;AYCA;;AACA;;AACA,IfHqBA,AIAAiC,AFAAb;AFCnB,AIAA,AFAA,qBEAc,MJAFnB,AEAAA,OFAZ,AEAA,EFAqB,AEAA;AFAA,AeGvB,AXHgB,AFAO;AAAE;AFCrB,AeGJ,AXHI,SJAKA,AIAAI,MAAL,CJAA,EIAc,CJACJ,GIAf,IJAA;AACA,AICA,SJDKC,AICAgC,IJDL,GAAY,GICZ,CJDA,EICkB,EAAlB;AJAD,AeEH,AXDG;WFFD,oBAAW;AaIb,AbHI,YAAM,IAAInB,KAAJ,CAAU,uBAAV,CAAN;AACD;AaGH,WfFE,AICA,iBJDQb,IAAR,AICY,EJDE;AACZ,AICA,WJDKA,EICE,EJDP,GAAYA,AICAG,IJDZ,EICA;AJAA,AeCJ,AXAG,WFHD,EFES,KAAKH,IAAZ,QEFQ;AFGT,AEFC,YAAM,IAAIa,KAAJ,CAAU,uBAAV,CAAN;AaGJ,AbFG;WEGD,mBAAUV,MAAV,EAAkB;AAChB,WJDF,AICOA,MAAL,GAAcA,MAAd,QJDYF,OAAd,EAAuB;AACrB,AICD,UJDK,CEFN,IFEWC,UAAL,EAAJ,EAAuB,EEFd;AFGP,AEFF,YFEMC,CEFC,KFEK,AEFZ,GFEe,KAAKC,OAAL,CAAaH,OAAb,CAAb;AACAA,AEFH,QFEGA,OAAO,CAACI,SAAR,CAAkBF,MAAlB;IKZe8B,ACAAI,AGAAI,ADAAD,APAA1B,AMAAyB,AGAAG,ACAAC,ACAAC,ACAAE,ACAAG,AXAA9B,OCanB,wBAAeZ,IAAf,EAAqB;AJCjB,AIAF,WAAKyB,CJAC,KAAKhC,IAAT,AIAF,EJAiB,EIAEO,IAAnB;AJCI,AIAL,eJAUP,IAAL,CAAUM,aAAV,CAAwBL,OAAxB;AACD;AACF,IePgBkD;AfQlB,AKjBD,ACAA,AGAA,ADAA,APAA,AMAA,AGAA,ACAA,ACAA,ACAA,ACAA,AXAA,WCgBA,cDhBY/B,CFAArB,IYAAA,AVAZ,CGAYA,AKAAA,AGAAA,CXAO,CFAnB,CQAYA,ALgBE,AQhBFA,CXAS,ASATA,CLAAA,AGAAA,CDAAA,AMAZ,CPAA,AKAA,AGAA,CDAqB,CPAA,AKAA,AGAA,CLArB,AGAA,CFAA,CLAA,AIAqB,ADArB,AIAqB,CLArB,AGAqB,CLAA,AGAA,CDAA;AFAA,ACAA,AGAA,ADAA,APAA,AGiBnB,AGjBmB,AGAA,ACAA,ACAA,ACAA,ACAA,AXAF,aCiBV,KAAKiC,UAAZ;AACD;AClBoB,ACAA,AGAA,ADAA,APAA,AMAA,AGAA,ACAA,ACAA,ACAA,ACAA,AXAF,WHmBnB,kBKlBQjC,ACAAA,AGAAA,ADAAA,APAAA,AMAAA,AIAAA,AEAAA,ACAAA,IdkBKE,GKnBQ,ACAA,AGAA,ADAA,APAA,AMAA,AIAA,AEAA,ACAA,IdmBrB,EAAsB;AACpB,AKlBD,ACAA,AGAA,ADAA,APAA,AMAA,AIAA,AEAA,ACAA,UdkBKM,IAAI,GAAG,KAAKC,WAAL,CAAiBP,OAAjB,CAAX;AACAA,AUpBA,AEAA,ATAA,MHoBAA,OAAO,CAACQ,cAAR,CAAuBF,CYpBjBR,GZoBN,IYpBA;AFEA,AEAA,ATAA,UOAKA,AEAA8C,ATAAxB,CYOP,KZPE,COAA,AEAA,ETAc,COACtB,AEAA,CAAf,ATAA,MYOK,ALPL;AVoBA,AeZA,ALXmB,AEAA,UZuBf,CeZCqD,IfYIpD,CeZT,GfYA,EAAe;AACb,AeZF,ALRD,AEAA,ATCC,QAAIoB,GEDN,ACAA,ASQOiC,ANRP,ADAA,APAA,AMAA,AIAA,AEAA,ACAA,EdoBSrD,AGnBE,GYOT,CfYE,CAAUU,AGnBE,IAAd,EAAoB,IGDdT,AGAAA,ADAAA,APAAA,AMAAA,EPoBJ,CAAuBA,AWpBhB,AEAA,ACAA,GTAG,CCAd,AGAA,ADAA,APAA,AMAA,EDAiB,AGAA,ADAA,APAA,AMAA,CPoBb;AACD,AKpBD,ACAA,ASQA,ANRA,ADAA,APAA,AMAA,AIAA,AEAA,ACAA,AXCE,UGDEkC,AGAAA,ADAAA,APAApB,AMAAoB,CQQCmB,CVRC,AFCCjC,CQDA,AEAAK,ACAAA,EbAE,CIACb,AUQV,CJRW,CVAC,AECV,CAAYS,EEDR,ACAS,AGAA,ADAA,ADAA,CFAC,AMAAvB,CVACiB,AYAA,ACAA,AXCf,CGDgBf,AGAAA,ADAAA,ADAAA,AMAA8C,ACAAA,AXCC3B,IUDG,ACAA,CHAX,AEAY4B,ACAAE,AXCrB,CQDsBvC,CLAC,AGAA,ADAA,ADAA,CDAC2B,AGAAA,ADAAA,ADAAA,AMAR,CAAS,ACAT,CAAU,IbAhB,AUAD,AEAqBvC,CCACA,CbAjC,AUAA,CLAkB,AGAA,ADAA,ADAA,EDAlB,AGAA,ADAA,ADAA,EFAM,AQAqB,CRA3B,AQAwCY,ACAZ,CAAaA,ODAd,CCAC,CDAV,CCAA,CDAkC,ACAnC,CDAC,ACAlB,CDAiB,CAAjB;AbqBD,AKpBA,ACAC,ASQA,ANRA,ADAA,APAA,AMAA,AIAD,AEAA,ACAA,AXCE,UGDGyB,AGAAA,ADAAA,ADAAA,CQQCmB,EdRExC,GcQP,EdRA,IKAgB,AGAA,ADAA,ADAA,GDAG,AGAA,ADAA,ADAA,KDAKC,AGAAA,ADAAA,ADAAA,eDAL,AGAA,ADAA,ADAA,EDAnB,AGAA,ADAA,ADAA;ADEA,ASOA,ANPA,ADAA,APDD,AMCC,WQOKwC,ETPErB,AGAAA,ADAAA,ADAAA,GQOP,QTPkB,AGAA,ADAA,ADAA,GDAGC,AGAAA,ADAAA,ADAAA,YDArB,AGAA,ADAA,ADAA;ADCD,ASOC,ANPD,ADAA,ADAA,AJTkB,WYgBZqB,ALVP,AEAA,KGUE,eLVS1D,AEAA,OFAX,EAAoB;AKYlB,ALXA,AEAA,ATCD,WHoBD,AKpBA,AUUO2D,ALXA3D,ACCP,AEAA,ACAA,EFDS2B,KFAP,GAAe3B,EEAE,CGWjB,AHXkB,IFAlB,CEAuBA,CDCf,AEAA,ACAA,ETAEE,IODQ,CAAaU,CZqBf,CKpBlB,EAAqB,IODD,KAA0B,KAAKkC,OAAhC,CAAjB;AZsBA,AKpBA,AUUA,ALXD,ACCC,ACDD,ACCC,ACAA,WCUKc,AdVP,EDoBS,KAAK5D,MKpBD,AUUX,CfUO,CAAaY,CapBN,CFAC,AGAA,CTACuB,GJANjC,AYASF,CFACA,AGAAA,CdoBb,EAAP,GCpBF,AYAgB,CRAH,AMAI,AEAYa,ACAZ,CbAI,AUASA,AGAAA,CTA5B,KQAc,CFAC,AGAA,CDAf,CFAA,AGAA,MTAiC,KAAKK,cAAL,EAAjC;ALqBD,AKpBA,AUUC,AdVA,AUAD,AEAA,ACAA,WRCD,ASSO2C,ANTP,ADAA,ADAA,ENDS,KAAK3C,McUZ,QdVO,EKCK,AGAA,ADAA,APDZ,AMCY;ADCZ,ASSA,ANTA,ADAA,APDD,AMCC,WQSK4C,ETTE,AGAA,ADAA,ADAA,GDAP,AGAA,ADAA,ADAA,QQSA;ATRD,ASSC,ANTD,ADAA,ADAA,WQSMC,AHZP,ATAA,aYYE,MHZQ,CTAC;AYaT,AHZA,ATAA,EOZiD5C,QPY7CK,CHqBN,AKpBA,AUWOwC,QZZQ,GAAG,EYYhB,GZZqBvC,ISAH,GPCN,EODWzB,CZqBR,EGrBC,EAAhB,ESAkB,CAAaa,OAAb,EAAlB;AZsBA,AKpBA,AUWD,AHZA,EDb8C8B,AEADA,ACACA,WdkCtC,AKpBA,IAAP,CLoBYxC,UAAL,KAAoB,KAAKH,OAAL,CAAaa,OAAb,EAApB,GAA6C,EAApD;AACD,AKpBA,AFDC,EFdwCd,QEcpCyB,CGEN,AGAA,ADAA,ADAA,QJFe,CAACE,MAAV,GAAmB,CAAvB,EAA0B,EGEdU,AGAAA,ADAAA,ADAAA,WDAd,AGAA,ADAA,ADAA,EDA2BC,AGAAA,ADAAA,ADAAA,YDA3B,AGAA,ADAA,ADAA,EDAyC,AGAA,ADAA,ADAA;ADCvC,AGAA,ADAA,ADAA,AJFE,aGEKD,AGAAA,ADAAA,ADAAA,EJFET,SGES,AGAA,ADAA,ADAA,CJFC,CAACH,CGECa,AGAAA,ADAAA,ADAAA,QJFF,CAAjB,GGEF,AGAA,ADAA,ADAA;ADCD,AGAA,ADAA,ADAA,AJFE,WYWH,AHZA,iBGYQ,GHZGS,OAAX,EAAoB;AGalB,AHZA,UGYImB,CfSN,AKpBA,AODOnB,OAAL,GGYe,AHZAA,GGYG,EAAlB,EfSM5C,AYrBN,MPCYkC,CLoBd,EAAiB,QKpBjB,EAA2BC,YAA3B,EAAyC;ALqBvC,AKpBA,AUYA,AHbD,ATCC,UYYI6B,EfQE,AKpBA,CFAC,CAAP,EHoBUpD,AKpBAA,KLoBJ,AKpBA,CLoBU,AKpBA,EUYE,GAAG,IAAIC,cfQnB,AKpBA,CLoBN,AKpBA,SUYqB,CAAmB,IAAIK,uBAAJ,CAAkB,IAAlB,CAAnB,CAArB;AfSD,AKpBA,AUaC6C,AZbD,MYaCA,WA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","file":"client.acef8101.js","sourceRoot":"..\\10장 계산기 프로젝트","sourcesContent":["export default class AbstractHandler {\r\n  constructor(operand) {\r\n    this.operand = operand;\r\n    this.next = null;\r\n  }\r\n\r\n  setNext(next) {\r\n    this.next = next;\r\n    return this.next;\r\n  }\r\n\r\n  handleRequest(request) {\r\n    if (this.hasOperand()) {\r\n      let result = this.operate(request);\r\n      request.setResult(result);\r\n\r\n      if (this.next) {\r\n        this.next.handleRequest(request);\r\n      }\r\n    }\r\n  }\r\n\r\n  makeEquation(request) {\r\n    let desc = this.getEquation(request);\r\n    request.appendEquation(desc);\r\n\r\n    if (this.next) {\r\n      this.next.makeEquation(request);\r\n    }\r\n  }\r\n\r\n  getOperandValue() {\r\n    return this.operand.getValue();\r\n  }\r\n\r\n  getOperandDesc() {\r\n    return this.hasOperand() ? this.operand.getDesc() : \"\";\r\n  }\r\n\r\n  operate(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  hasOperand() {\r\n    if (this.operand !== null) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isOperation() {\r\n    return false;\r\n  }\r\n\r\n  getOperand() {\r\n    return this.operand;\r\n  }\r\n\r\n  setOperand(operand) {\r\n    this.operand = operand;\r\n  }\r\n}\r\n","import AbstractHandler from \"./abstract_handler\";\r\n\r\nexport default class OperandHandler extends AbstractHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let value = this.getOperandValue();\r\n    return value;\r\n  }\r\n\r\n  getEquation(request) {\r\n    return this.getOperandDesc();\r\n  }\r\n}\r\n","export default class AbstractOperand {\r\n  constructor(operand) {}\r\n\r\n  getValue() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n  getDesc() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  isNumber() {\r\n    return false;\r\n  }\r\n}\r\n","import AbstractOperand from \"./abstract_operand\";\r\n\r\nexport default class NumberOperand extends AbstractOperand {\r\n  constructor(input) {\r\n    super();\r\n\r\n    this.inputs = [];\r\n\r\n    if (input !== null) {\r\n      this.inputs.push(input);\r\n    }\r\n  }\r\n\r\n  getValue() {\r\n    let inputText = this.getInputText();\r\n\r\n    if (inputText.length > 0) {\r\n      return parseFloat(inputText);\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  getDesc() {\r\n    return this.getInputText();\r\n  }\r\n\r\n  append(input) {\r\n    this.inputs.push(input);\r\n  }\r\n\r\n  clearBack() {\r\n    const size = this.inputs.length;\r\n    if (size > 0) {\r\n      this.inputs.splice(size - 1, 1);\r\n    }\r\n  }\r\n\r\n  clearInput() {\r\n    this.inputs = [];\r\n  }\r\n\r\n  getInputText() {\r\n    return this.inputs.reduce((result, input) => result + String(input), \"\");\r\n  }\r\n\r\n  isNumber() {\r\n    return true;\r\n  }\r\n}\r\n","export default class Request {\r\n  constructor() {\r\n    this.result = null;\r\n\r\n    this.sbEquation = \"\";\r\n  }\r\n\r\n  getResult() {\r\n    return this.result;\r\n  }\r\n\r\n  setResult(result) {\r\n    this.result = result;\r\n  }\r\n\r\n  appendEquation(desc) {\r\n    this.sbEquation += desc;\r\n  }\r\n\r\n  getEquation() {\r\n    return this.sbEquation;\r\n  }\r\n}\r\n","import AbstractHandler from \"./abstract_handler\";\r\n\r\nexport default class AbstractOperationHandler extends AbstractHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  getOperator() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    return ` ${this.getOperator()} ${this.getOperandDesc()}`;\r\n  }\r\n\r\n  isOperation() {\r\n    return true;\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class AddOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber + secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"+\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber + secondNumber;\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class SubstractOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber - secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"-\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber - secondNumber;\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class MultiplyOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber * secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"*\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber * secondNumber;\r\n  }\r\n}\r\n","import AbstractOperationHandler from \"./abstract_operation_handler\";\r\n\r\nexport default class DivideOperationHandler extends AbstractOperationHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let firstNumber = request.getResult();\r\n    let secondNumber = this.getOperandValue();\r\n\r\n    return firstNumber / secondNumber;\r\n  }\r\n\r\n  getOperator() {\r\n    return \"/\";\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    return firstNumber / secondNumber;\r\n  }\r\n}\r\n","import AbstractOperand from \"../abstract_operand\";\r\n\r\nexport default class AbstractFunctionOperand extends AbstractOperand {\r\n  constructor(operand) {\r\n    super();\r\n\r\n    this.operand = operand;\r\n  }\r\n\r\n  setOperand(operand) {\r\n    this.operand = operand;\r\n  }\r\n}\r\n","import AbstractFunctionOperand from \"./abstract_function.operand\";\r\n\r\nexport default class FracFunctionOperand extends AbstractFunctionOperand {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  getValue() {\r\n    return 1 / this.operand.getValue();\r\n  }\r\n\r\n  getDesc() {\r\n    return `Frac(${this.operand.getDesc()})`;\r\n  }\r\n}\r\n","import AbstractFunctionOperand from \"./abstract_function.operand\";\r\n\r\nexport default class PercentFunctionOperand extends AbstractFunctionOperand {\r\n  constructor(operand) {\r\n    super(operand);\r\n\r\n    this.percent = 0;\r\n  }\r\n\r\n  getValue() {\r\n    return parseFloat(this.operand.getValue() * this.percent);\r\n  }\r\n\r\n  getDesc() {\r\n    return `Percent(${this.operand.getDesc()})`;\r\n  }\r\n\r\n  setPercent(percent) {\r\n    this.percent = percent;\r\n  }\r\n}\r\n","import AbstractFunctionOperand from \"./abstract_function.operand\";\r\n\r\nexport default class PowFunctionOperand extends AbstractFunctionOperand {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  getValue() {\r\n    return parseFloat(Math.pow(this.operand.getValue(), 2));\r\n  }\r\n\r\n  getDesc() {\r\n    return `POW(${this.operand.getDesc()})`;\r\n  }\r\n}\r\n","import AbstractFunctionOperand from \"./abstract_function.operand\";\r\n\r\nexport default class SqrtFunctionOperand extends AbstractFunctionOperand {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  getValue() {\r\n    return parseFloat(Math.sqrt(this.operand.getValue()));\r\n  }\r\n\r\n  getDesc() {\r\n    return `Sqrt(${this.operand.getDesc()})`;\r\n  }\r\n}\r\n","import OperandHandler from \"./operand_handler\";\r\nimport NumberOperand from \"../operand/number_operand\";\r\nimport Request from \"./request\";\r\nimport AddOperationHandler from \"./add_operation_handler\";\r\nimport SubstractOperationHandler from \"./substract_operation_handler\";\r\nimport MultiplyOperationHandler from \"./multiply_operation_handler\";\r\nimport DivideOperationHandler from \"./divide_operation_handler\";\r\nimport FracFunctionOperand from \"../operand/func/frac_function_operand\";\r\nimport PercentFunctionOperand from \"../operand/func/percent_function_operand\";\r\nimport PowFunctionOperand from \"../operand/func/pow_function_operand\";\r\nimport SqrtFunctionOperand from \"../operand/func/sqrt_function_operand\";\r\n\r\nexport default class Client {\r\n  main() {\r\n    this.test1();\r\n    this.test2();\r\n    this.test3();\r\n    this.test4();\r\n    this.test5();\r\n    this.test6();\r\n\r\n    this.testFunction1();\r\n    this.testFunction2();\r\n    this.testFunction3();\r\n    this.testFunction4();\r\n    this.testFunction5();\r\n    this.testFunction6();\r\n  }\r\n\r\n  test1() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n\r\n    handlerList.push(operandHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  test2() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let addOperationHandler = new AddOperationHandler(new NumberOperand(\"10\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(addOperationHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  test3() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let substractOperationHandler = new SubstractOperationHandler(new NumberOperand(\"2\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(substractOperationHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  test4() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let multiplyOperationHandler = new MultiplyOperationHandler(new NumberOperand(\"5\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(multiplyOperationHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  test5() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let divideOperationHandler = new DivideOperationHandler(new NumberOperand(\"3\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(divideOperationHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n  test6() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let substractOperationHandler = new SubstractOperationHandler(new NumberOperand(\"2\"));\r\n    let multiplyOperationHandler = new MultiplyOperationHandler(new NumberOperand(\"5\"));\r\n    let divideOperationHandler = new DivideOperationHandler(new NumberOperand(\"3\"));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(substractOperationHandler);\r\n    handlerList.push(multiplyOperationHandler);\r\n    handlerList.push(divideOperationHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  testFunction1() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new FracFunctionOperand(new NumberOperand(\"10\")));\r\n    handlerList.push(operandHandler);\r\n\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  testFunction2() {\r\n    let handlerList = [];\r\n\r\n    let percentFunctionOperand = new PercentFunctionOperand(new NumberOperand(\"10\"));\r\n    percentFunctionOperand.setPercent(0.5);\r\n    let operandHandler = new OperandHandler(percentFunctionOperand);\r\n\r\n    handlerList.push(operandHandler);\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  testFunction3() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new PowFunctionOperand(new NumberOperand(\"10\")));\r\n\r\n    handlerList.push(operandHandler);\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  testFunction4() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new SqrtFunctionOperand(new NumberOperand(\"10\")));\r\n\r\n    handlerList.push(operandHandler);\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n  testFunction5() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let addOperationHandler = new AddOperationHandler(new FracFunctionOperand(new NumberOperand(\"10\")));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(addOperationHandler);\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n  testFunction6() {\r\n    let handlerList = [];\r\n\r\n    let operandHandler = new OperandHandler(new NumberOperand(\"12\"));\r\n    let addOperationHandler = new AddOperationHandler(new PowFunctionOperand(new FracFunctionOperand(new NumberOperand(\"10\"))));\r\n\r\n    handlerList.push(operandHandler);\r\n    handlerList.push(addOperationHandler);\r\n    this.tempTest(operandHandler, handlerList);\r\n  }\r\n\r\n  tempTest(operandHandler, handlerList) {\r\n    let handler = null;\r\n    let nextHandler = null;\r\n\r\n    for (let index = 0; index < handlerList.length - 1; index++) {\r\n      handler = handlerList[index];\r\n      nextHandler = handlerList[index + 1];\r\n\r\n      handler.setNext(nextHandler);\r\n    }\r\n\r\n    let request = new Request();\r\n    operandHandler.makeEquation(request);\r\n\r\n    console.log(`request.getEquation() = ${request.getEquation()}`);\r\n\r\n    request = new Request();\r\n    operandHandler.handleRequest(request);\r\n\r\n    console.log(`request.getResult() = ${request.getResult()}`);\r\n  }\r\n}\r\n"]}