{"version":3,"sources":["js/chain/abstract_handler.js","js/chain/abstract_operation_handler.js"],"names":["AbstractHandler","operand","next","request","hasOperand","result","operate","setResult","handleRequest","desc","getEquation","appendEquation","getValue","getDesc","Error","AbstractOperationHandler","getOperator","getOperandDesc","firstNumber","secondNumber"],"mappings":";;;;;;;ACAA;;;;;;IDAqBA;AACnB,2BAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAY,IAAZ;AACD;;;;WAED,iBAAQA,IAAR,EAAc;AACZ,WAAKA,IAAL,GAAYA,IAAZ;AACA,aAAO,KAAKA,IAAZ;AACD;;;WAED,uBAAcC,OAAd,EAAuB;AACrB,UAAI,KAAKC,UAAL,EAAJ,EAAuB;AACrB,YAAIC,MAAM,GAAG,KAAKC,OAAL,CAAaH,OAAb,CAAb;AACAA,QAAAA,OAAO,CAACI,SAAR,CAAkBF,MAAlB;ICZeU;ADcf,YAAI,KAAKb,IAAL,KAAc,IAAlB,EAAwB;AACtB,eAAKA,IAAL,CAAUM,aAAV,CAAwBL,OAAxB;AACD;AACF;AACF,ACjBD,oCAAYF,OAAZ,EAAqB;AAAA;;AAAA,WDmBrB,kBClBQA,IDkBKE,GCnBQ,IDmBrB,EAAsB;AACpB,AClBD,UDkBKM,IAAI,GAAG,KAAKC,WAAL,CAAiBP,OAAjB,CAAX;AACAA,MAAAA,OAAO,CAACQ,cAAR,CAAuBF,IAAvB;;AAEA,UAAI,KAAKP,IAAL,KAAc,IAAlB,EAAwB;AACtB,WCpBJ,EDoBSA,IAAL,CAAUS,cAAV,CAAyBR,CCpBf,MDoBV;AACD,ACpBD,YAAM,IAAIW,KAAJ,CAAU,uBAAV,CAAN;ADqBD,ACpBA;;;WDsBD,ACpBA,qBAAYX,MDoBM,CCpBlB,EAAqB;ADqBnB,ACpBA,aDoBO,KAAKF,MCpBD,CDoBJ,CAAaW,GCpBJI,KDoBT,EAAP,ICpBW,EAAX,cAAiC,KAAKC,cAAL,EAAjC;ADqBD,ACpBA;;;WDsBD,ACpBA,uBAAc,GDoBG;AACf,ACpBA,aDoBO,ACpBA,IAAP,CDoBYb,UAAL,KAAoB,KAAKH,OAAL,CAAaY,OAAb,EAApB,GAA6C,EAApD;AACD,ACpBA;;;WDsBD,ACpBA,iBDoBQV,MCpBMe,CDoBd,EAAiB,QCpBjB,EAA2BC,YAA3B,EAAyC;ADqBvC,ACpBA,YDoBM,ACpBA,IDoBIL,ACpBAA,KDoBJ,ACpBA,CDoBU,ACpBA,uBDoBV,ACpBA,CDoBN,ACpBA;ADqBD,ACpBA;;;WDsBD,qBAAYX,OAAZ,EAAqB;AACnB,EC1CkDH,UD0C5C,IAAIc,KAAJ,CAAU,uBAAV,CAAN;AACD;;;WAED,sBAAa;AACX,UAAI,KAAKb,OAAL,KAAiB,IAArB,EAA2B;AACzB,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;;WAED,uBAAc;AACZ,aAAO,KAAP;AACD;;;WAED,sBAAa;AACX,aAAO,KAAKA,OAAZ;AACD;;;WAED,oBAAWA,OAAX,EAAoB;AAClB,WAAKA,OAAL,GAAeA,OAAf;AACD","file":"abstract_operation_handler.7648e1b9.js","sourceRoot":"..\\10장 계산기 프로젝트","sourcesContent":["export default class AbstractHandler {\r\n  constructor(operand) {\r\n    this.operand = operand;\r\n    this.next = null;\r\n  }\r\n\r\n  setNext(next) {\r\n    this.next = next;\r\n    return this.next;\r\n  }\r\n\r\n  handleRequest(request) {\r\n    if (this.hasOperand()) {\r\n      let result = this.operate(request);\r\n      request.setResult(result);\r\n\r\n      if (this.next !== null) {\r\n        this.next.handleRequest(request);\r\n      }\r\n    }\r\n  }\r\n\r\n  makeEquation(request) {\r\n    let desc = this.getEquation(request);\r\n    request.appendEquation(desc);\r\n\r\n    if (this.next !== null) {\r\n      this.next.appendEquation(request);\r\n    }\r\n  }\r\n\r\n  getOperandValue() {\r\n    return this.operand.getValue();\r\n  }\r\n\r\n  getOperandDesc() {\r\n    return this.hasOperand() ? this.operand.getDesc() : \"\";\r\n  }\r\n\r\n  operate(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  hasOperand() {\r\n    if (this.operand !== null) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isOperation() {\r\n    return false;\r\n  }\r\n\r\n  getOperand() {\r\n    return this.operand;\r\n  }\r\n\r\n  setOperand(operand) {\r\n    this.operand = operand;\r\n  }\r\n}\r\n","import AbstractHandler from \"./abstract_handler\";\r\n\r\nexport default class AbstractOperationHandler extends AbstractHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  getOperator() {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    return ` ${this.getOperator()} ${this.getOperandDesc()}`;\r\n  }\r\n\r\n  isOperation() {\r\n    return true;\r\n  }\r\n\r\n  operateNumber(firstNumber, secondNumber) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n}\r\n"]}