{"version":3,"sources":["js/chain/abstract_handler.js","js/chain/operand_handler.js"],"names":["AbstractHandler","operand","next","request","hasOperand","result","operate","setResult","handleRequest","desc","getEquation","appendEquation","makeEquation","getValue","getDesc","Error","OperandHandler","value","getOperandValue","getOperandDesc"],"mappings":";;;;;;;ACAA;;;;;;IDAqBA;AACnB,2BAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAY,IAAZ;AACD;;;;WAED,iBAAQA,IAAR,EAAc;AACZ,WAAKA,IAAL,GAAYA,IAAZ;AACA,aAAO,KAAKA,IAAZ;AACD;;;WAED,uBAAcC,OAAd,EAAuB;AACrB,UAAI,KAAKC,UAAL,EAAJ,EAAuB;AACrB,YAAIC,MAAM,GAAG,KAAKC,OAAL,CAAaH,OAAb,CAAb;AACAA,QAAAA,OAAO,CAACI,SAAR,CAAkBF,MAAlB;ICZeW;ADcf,YAAI,KAAKd,IAAT,EAAe;AACb,eAAKA,IAAL,CAAUM,aAAV,CAAwBL,OAAxB;AACD;AACF;AACF,ACjBD,0BAAYF,OAAZ,EAAqB;AAAA;;AAAA,WDmBrB,kBClBQA,IDkBKE,GCnBQ,IDmBrB,EAAsB;AACpB,AClBD,UDkBKM,IAAI,GAAG,KAAKC,WAAL,CAAiBP,OAAjB,CAAX;AACAA,MAAAA,OAAO,CAACQ,cAAR,CAAuBF,IAAvB;;AAEA,UAAI,KAAKP,IAAT,EAAe;AACb,WCpBJ,EDoBSA,IAAL,CAAUU,UCpBNT,EDoBJ,CAAuBA,ICpB3B,EAAiB,CDoBb;AACD,ACpBD,UAAIc,KAAK,GAAG,KAAKC,eAAL,EAAZ;ADqBD,ACpBC,aAAOD,KAAP;AACD;;WDqBD,2BAAkB;AAChB,WCpBF,EDoBS,KAAKhB,OAAL,CAAaY,MCpBVV,EDoBH,EAAP,GCpBF,EAAqB;ADqBpB,ACpBC,aAAO,KAAKgB,cAAL,EAAP;AACD;;WDqBD,0BAAiB;AACf,aAAO,KAAKf,UAAL,KAAoB,KAAKH,OAAL,CAAaa,OAAb,EAApB,GAA6C,EAApD;AACD,ECnCyCd;;;WDqC1C,iBAAQG,OAAR,EAAiB;AACf,YAAM,IAAIY,KAAJ,CAAU,uBAAV,CAAN;AACD;;;WAED,qBAAYZ,OAAZ,EAAqB;AACnB,YAAM,IAAIY,KAAJ,CAAU,uBAAV,CAAN;AACD;;;WAED,sBAAa;AACX,UAAI,KAAKd,OAAL,KAAiB,IAArB,EAA2B;AACzB,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD;;;WAED,uBAAc;AACZ,aAAO,KAAP;AACD;;;WAED,sBAAa;AACX,aAAO,KAAKA,OAAZ;AACD;;;WAED,oBAAWA,OAAX,EAAoB;AAClB,WAAKA,OAAL,GAAeA,OAAf;AACD","file":"operand_handler.4fa6cf32.js","sourceRoot":"..\\10장 계산기 프로젝트","sourcesContent":["export default class AbstractHandler {\r\n  constructor(operand) {\r\n    this.operand = operand;\r\n    this.next = null;\r\n  }\r\n\r\n  setNext(next) {\r\n    this.next = next;\r\n    return this.next;\r\n  }\r\n\r\n  handleRequest(request) {\r\n    if (this.hasOperand()) {\r\n      let result = this.operate(request);\r\n      request.setResult(result);\r\n\r\n      if (this.next) {\r\n        this.next.handleRequest(request);\r\n      }\r\n    }\r\n  }\r\n\r\n  makeEquation(request) {\r\n    let desc = this.getEquation(request);\r\n    request.appendEquation(desc);\r\n\r\n    if (this.next) {\r\n      this.next.makeEquation(request);\r\n    }\r\n  }\r\n\r\n  getOperandValue() {\r\n    return this.operand.getValue();\r\n  }\r\n\r\n  getOperandDesc() {\r\n    return this.hasOperand() ? this.operand.getDesc() : \"\";\r\n  }\r\n\r\n  operate(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  getEquation(request) {\r\n    throw new Error(\"implement this method\");\r\n  }\r\n\r\n  hasOperand() {\r\n    if (this.operand !== null) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isOperation() {\r\n    return false;\r\n  }\r\n\r\n  getOperand() {\r\n    return this.operand;\r\n  }\r\n\r\n  setOperand(operand) {\r\n    this.operand = operand;\r\n  }\r\n}\r\n","import AbstractHandler from \"./abstract_handler\";\r\n\r\nexport default class OperandHandler extends AbstractHandler {\r\n  constructor(operand) {\r\n    super(operand);\r\n  }\r\n\r\n  operate(request) {\r\n    let value = this.getOperandValue();\r\n    return value;\r\n  }\r\n\r\n  getEquation(request) {\r\n    return this.getOperandDesc();\r\n  }\r\n}\r\n"]}